// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: pkg/server/service.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JumperType int32

const (
	JumperType_EXPERIENCED       JumperType = 0
	JumperType_AFF_STUDENT       JumperType = 1
	JumperType_COACH_STUDENT     JumperType = 2
	JumperType_TANDEM_STUDENT    JumperType = 3
	JumperType_AFF_INSTRUCTOR    JumperType = 4
	JumperType_COACH             JumperType = 5
	JumperType_TANDEM_INSTRUCTOR JumperType = 6
	JumperType_VIDEOGRAPHER      JumperType = 7
)

// Enum value maps for JumperType.
var (
	JumperType_name = map[int32]string{
		0: "EXPERIENCED",
		1: "AFF_STUDENT",
		2: "COACH_STUDENT",
		3: "TANDEM_STUDENT",
		4: "AFF_INSTRUCTOR",
		5: "COACH",
		6: "TANDEM_INSTRUCTOR",
		7: "VIDEOGRAPHER",
	}
	JumperType_value = map[string]int32{
		"EXPERIENCED":       0,
		"AFF_STUDENT":       1,
		"COACH_STUDENT":     2,
		"TANDEM_STUDENT":    3,
		"AFF_INSTRUCTOR":    4,
		"COACH":             5,
		"TANDEM_INSTRUCTOR": 6,
		"VIDEOGRAPHER":      7,
	}
)

func (x JumperType) Enum() *JumperType {
	p := new(JumperType)
	*p = x
	return p
}

func (x JumperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JumperType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_server_service_proto_enumTypes[0].Descriptor()
}

func (JumperType) Type() protoreflect.EnumType {
	return &file_pkg_server_service_proto_enumTypes[0]
}

func (x JumperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JumperType.Descriptor instead.
func (JumperType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{0}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winds            string `protobuf:"bytes,1,opt,name=winds,proto3" json:"winds,omitempty"`
	WindsColor       uint32 `protobuf:"varint,2,opt,name=windsColor,proto3" json:"windsColor,omitempty"`
	Clouds           string `protobuf:"bytes,3,opt,name=clouds,proto3" json:"clouds,omitempty"`
	CloudsColor      uint32 `protobuf:"varint,4,opt,name=cloudsColor,proto3" json:"cloudsColor,omitempty"`
	Weather          string `protobuf:"bytes,5,opt,name=weather,proto3" json:"weather,omitempty"`
	WeatherColor     uint32 `protobuf:"varint,6,opt,name=weatherColor,proto3" json:"weatherColor,omitempty"`
	Separation       string `protobuf:"bytes,7,opt,name=separation,proto3" json:"separation,omitempty"`
	SeparationColor  uint32 `protobuf:"varint,8,opt,name=separationColor,proto3" json:"separationColor,omitempty"`
	Temperature      string `protobuf:"bytes,9,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TemperatureColor uint32 `protobuf:"varint,10,opt,name=temperatureColor,proto3" json:"temperatureColor,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetWinds() string {
	if x != nil {
		return x.Winds
	}
	return ""
}

func (x *Status) GetWindsColor() uint32 {
	if x != nil {
		return x.WindsColor
	}
	return 0
}

func (x *Status) GetClouds() string {
	if x != nil {
		return x.Clouds
	}
	return ""
}

func (x *Status) GetCloudsColor() uint32 {
	if x != nil {
		return x.CloudsColor
	}
	return 0
}

func (x *Status) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

func (x *Status) GetWeatherColor() uint32 {
	if x != nil {
		return x.WeatherColor
	}
	return 0
}

func (x *Status) GetSeparation() string {
	if x != nil {
		return x.Separation
	}
	return ""
}

func (x *Status) GetSeparationColor() uint32 {
	if x != nil {
		return x.SeparationColor
	}
	return 0
}

func (x *Status) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *Status) GetTemperatureColor() uint32 {
	if x != nil {
		return x.TemperatureColor
	}
	return 0
}

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayNicknames bool   `protobuf:"varint,2,opt,name=display_nicknames,json=displayNicknames,proto3" json:"display_nicknames,omitempty"`
	DisplayWeather   bool   `protobuf:"varint,3,opt,name=display_weather,json=displayWeather,proto3" json:"display_weather,omitempty"`
	DisplayWinds     bool   `protobuf:"varint,4,opt,name=display_winds,json=displayWinds,proto3" json:"display_winds,omitempty"`
	Message          string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	MessageColor     uint32 `protobuf:"varint,6,opt,name=messageColor,proto3" json:"messageColor,omitempty"`
	Sunrise          string `protobuf:"bytes,7,opt,name=sunrise,proto3" json:"sunrise,omitempty"`
	Sunset           string `protobuf:"bytes,8,opt,name=sunset,proto3" json:"sunset,omitempty"`
	FuelRequested    bool   `protobuf:"varint,9,opt,name=fuelRequested,proto3" json:"fuelRequested,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{1}
}

func (x *Options) GetDisplayNicknames() bool {
	if x != nil {
		return x.DisplayNicknames
	}
	return false
}

func (x *Options) GetDisplayWeather() bool {
	if x != nil {
		return x.DisplayWeather
	}
	return false
}

func (x *Options) GetDisplayWinds() bool {
	if x != nil {
		return x.DisplayWinds
	}
	return false
}

func (x *Options) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Options) GetMessageColor() uint32 {
	if x != nil {
		return x.MessageColor
	}
	return 0
}

func (x *Options) GetSunrise() string {
	if x != nil {
		return x.Sunrise
	}
	return ""
}

func (x *Options) GetSunset() string {
	if x != nil {
		return x.Sunset
	}
	return ""
}

func (x *Options) GetFuelRequested() bool {
	if x != nil {
		return x.FuelRequested
	}
	return false
}

type JumprunOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude          string `protobuf:"bytes,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude         string `protobuf:"bytes,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	MagneticDeviation int32  `protobuf:"varint,3,opt,name=magnetic_deviation,json=magneticDeviation,proto3" json:"magnetic_deviation,omitempty"`
	CameraHeight      int32  `protobuf:"varint,4,opt,name=camera_height,json=cameraHeight,proto3" json:"camera_height,omitempty"`
}

func (x *JumprunOrigin) Reset() {
	*x = JumprunOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumprunOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumprunOrigin) ProtoMessage() {}

func (x *JumprunOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumprunOrigin.ProtoReflect.Descriptor instead.
func (*JumprunOrigin) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{2}
}

func (x *JumprunOrigin) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *JumprunOrigin) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *JumprunOrigin) GetMagneticDeviation() int32 {
	if x != nil {
		return x.MagneticDeviation
	}
	return 0
}

func (x *JumprunOrigin) GetCameraHeight() int32 {
	if x != nil {
		return x.CameraHeight
	}
	return 0
}

type JumprunTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distance int32 `protobuf:"varint,1,opt,name=distance,proto3" json:"distance,omitempty"`
	Heading  int32 `protobuf:"varint,2,opt,name=heading,proto3" json:"heading,omitempty"`
}

func (x *JumprunTurn) Reset() {
	*x = JumprunTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumprunTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumprunTurn) ProtoMessage() {}

func (x *JumprunTurn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumprunTurn.ProtoReflect.Descriptor instead.
func (*JumprunTurn) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{3}
}

func (x *JumprunTurn) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *JumprunTurn) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

type JumprunPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heading        int32          `protobuf:"varint,3,opt,name=heading,proto3" json:"heading,omitempty"`
	ExitDistance   int32          `protobuf:"varint,4,opt,name=exit_distance,json=exitDistance,proto3" json:"exit_distance,omitempty"`
	OffsetHeading  int32          `protobuf:"varint,5,opt,name=offset_heading,json=offsetHeading,proto3" json:"offset_heading,omitempty"`
	OffsetDistance int32          `protobuf:"varint,6,opt,name=offset_distance,json=offsetDistance,proto3" json:"offset_distance,omitempty"`
	Turns          []*JumprunTurn `protobuf:"bytes,7,rep,name=turns,proto3" json:"turns,omitempty"`
}

func (x *JumprunPath) Reset() {
	*x = JumprunPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumprunPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumprunPath) ProtoMessage() {}

func (x *JumprunPath) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumprunPath.ProtoReflect.Descriptor instead.
func (*JumprunPath) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{4}
}

func (x *JumprunPath) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *JumprunPath) GetExitDistance() int32 {
	if x != nil {
		return x.ExitDistance
	}
	return 0
}

func (x *JumprunPath) GetOffsetHeading() int32 {
	if x != nil {
		return x.OffsetHeading
	}
	return 0
}

func (x *JumprunPath) GetOffsetDistance() int32 {
	if x != nil {
		return x.OffsetDistance
	}
	return 0
}

func (x *JumprunPath) GetTurns() []*JumprunTurn {
	if x != nil {
		return x.Turns
	}
	return nil
}

type Jumprun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin  *JumprunOrigin `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Path    *JumprunPath   `protobuf:"bytes,2,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Offsets []int32        `protobuf:"varint,3,rep,packed,name=offsets,proto3" json:"offsets,omitempty"`
}

func (x *Jumprun) Reset() {
	*x = Jumprun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jumprun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jumprun) ProtoMessage() {}

func (x *Jumprun) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jumprun.ProtoReflect.Descriptor instead.
func (*Jumprun) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{5}
}

func (x *Jumprun) GetOrigin() *JumprunOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Jumprun) GetPath() *JumprunPath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Jumprun) GetOffsets() []int32 {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type WindsAloftSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Altitude    int32 `protobuf:"varint,1,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Heading     int32 `protobuf:"varint,2,opt,name=heading,proto3" json:"heading,omitempty"`
	Speed       int32 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Temperature int32 `protobuf:"varint,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Variable    bool  `protobuf:"varint,5,opt,name=variable,proto3" json:"variable,omitempty"`
}

func (x *WindsAloftSample) Reset() {
	*x = WindsAloftSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindsAloftSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindsAloftSample) ProtoMessage() {}

func (x *WindsAloftSample) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindsAloftSample.ProtoReflect.Descriptor instead.
func (*WindsAloftSample) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{6}
}

func (x *WindsAloftSample) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *WindsAloftSample) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *WindsAloftSample) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *WindsAloftSample) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WindsAloftSample) GetVariable() bool {
	if x != nil {
		return x.Variable
	}
	return false
}

type WindsAloft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples []*WindsAloftSample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *WindsAloft) Reset() {
	*x = WindsAloft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindsAloft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindsAloft) ProtoMessage() {}

func (x *WindsAloft) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindsAloft.ProtoReflect.Descriptor instead.
func (*WindsAloft) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{7}
}

func (x *WindsAloft) GetSamples() []*WindsAloftSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

type Jumper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      JumperType `protobuf:"varint,2,opt,name=type,proto3,enum=manifest.JumperType" json:"type,omitempty"`
	Name      string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Nickname  string     `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	ShortName string     `protobuf:"bytes,5,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Color     uint32     `protobuf:"varint,6,opt,name=color,proto3" json:"color,omitempty"`
	Repr      string     `protobuf:"bytes,7,opt,name=repr,proto3" json:"repr,omitempty"`
	RigName   string     `protobuf:"bytes,8,opt,name=rig_name,json=rigName,proto3" json:"rig_name,omitempty"`
}

func (x *Jumper) Reset() {
	*x = Jumper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jumper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jumper) ProtoMessage() {}

func (x *Jumper) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jumper.ProtoReflect.Descriptor instead.
func (*Jumper) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{8}
}

func (x *Jumper) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Jumper) GetType() JumperType {
	if x != nil {
		return x.Type
	}
	return JumperType_EXPERIENCED
}

func (x *Jumper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Jumper) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Jumper) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Jumper) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *Jumper) GetRepr() string {
	if x != nil {
		return x.Repr
	}
	return ""
}

func (x *Jumper) GetRigName() string {
	if x != nil {
		return x.RigName
	}
	return ""
}

type JumperGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leader  *Jumper   `protobuf:"bytes,1,opt,name=leader,proto3" json:"leader,omitempty"`
	Members []*Jumper `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *JumperGroup) Reset() {
	*x = JumperGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumperGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumperGroup) ProtoMessage() {}

func (x *JumperGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumperGroup.ProtoReflect.Descriptor instead.
func (*JumperGroup) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{9}
}

func (x *JumperGroup) GetLeader() *Jumper {
	if x != nil {
		return x.Leader
	}
	return nil
}

func (x *JumperGroup) GetMembers() []*Jumper {
	if x != nil {
		return x.Members
	}
	return nil
}

type LoadSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Slot:
	//	*LoadSlot_Jumper
	//	*LoadSlot_Group
	Slot isLoadSlot_Slot `protobuf_oneof:"slot"`
}

func (x *LoadSlot) Reset() {
	*x = LoadSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSlot) ProtoMessage() {}

func (x *LoadSlot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSlot.ProtoReflect.Descriptor instead.
func (*LoadSlot) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{10}
}

func (m *LoadSlot) GetSlot() isLoadSlot_Slot {
	if m != nil {
		return m.Slot
	}
	return nil
}

func (x *LoadSlot) GetJumper() *Jumper {
	if x, ok := x.GetSlot().(*LoadSlot_Jumper); ok {
		return x.Jumper
	}
	return nil
}

func (x *LoadSlot) GetGroup() *JumperGroup {
	if x, ok := x.GetSlot().(*LoadSlot_Group); ok {
		return x.Group
	}
	return nil
}

type isLoadSlot_Slot interface {
	isLoadSlot_Slot()
}

type LoadSlot_Jumper struct {
	Jumper *Jumper `protobuf:"bytes,1,opt,name=jumper,proto3,oneof"`
}

type LoadSlot_Group struct {
	Group *JumperGroup `protobuf:"bytes,2,opt,name=group,proto3,oneof"`
}

func (*LoadSlot_Jumper) isLoadSlot_Slot() {}

func (*LoadSlot_Group) isLoadSlot_Slot() {}

type Load struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AircraftName         string      `protobuf:"bytes,2,opt,name=aircraft_name,json=aircraftName,proto3" json:"aircraft_name,omitempty"`
	LoadNumber           string      `protobuf:"bytes,3,opt,name=load_number,json=loadNumber,proto3" json:"load_number,omitempty"`
	CallMinutes          int32       `protobuf:"varint,4,opt,name=call_minutes,json=callMinutes,proto3" json:"call_minutes,omitempty"`
	CallMinutesString    string      `protobuf:"bytes,5,opt,name=call_minutes_string,json=callMinutesString,proto3" json:"call_minutes_string,omitempty"`
	SlotsAvailable       int32       `protobuf:"varint,6,opt,name=slots_available,json=slotsAvailable,proto3" json:"slots_available,omitempty"`
	SlotsAvailableString string      `protobuf:"bytes,7,opt,name=slots_available_string,json=slotsAvailableString,proto3" json:"slots_available_string,omitempty"`
	IsFueling            bool        `protobuf:"varint,8,opt,name=is_fueling,json=isFueling,proto3" json:"is_fueling,omitempty"`
	IsTurning            bool        `protobuf:"varint,9,opt,name=is_turning,json=isTurning,proto3" json:"is_turning,omitempty"`
	IsNoTime             bool        `protobuf:"varint,10,opt,name=is_no_time,json=isNoTime,proto3" json:"is_no_time,omitempty"`
	Slots                []*LoadSlot `protobuf:"bytes,11,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *Load) Reset() {
	*x = Load{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Load) ProtoMessage() {}

func (x *Load) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Load.ProtoReflect.Descriptor instead.
func (*Load) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{11}
}

func (x *Load) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Load) GetAircraftName() string {
	if x != nil {
		return x.AircraftName
	}
	return ""
}

func (x *Load) GetLoadNumber() string {
	if x != nil {
		return x.LoadNumber
	}
	return ""
}

func (x *Load) GetCallMinutes() int32 {
	if x != nil {
		return x.CallMinutes
	}
	return 0
}

func (x *Load) GetCallMinutesString() string {
	if x != nil {
		return x.CallMinutesString
	}
	return ""
}

func (x *Load) GetSlotsAvailable() int32 {
	if x != nil {
		return x.SlotsAvailable
	}
	return 0
}

func (x *Load) GetSlotsAvailableString() string {
	if x != nil {
		return x.SlotsAvailableString
	}
	return ""
}

func (x *Load) GetIsFueling() bool {
	if x != nil {
		return x.IsFueling
	}
	return false
}

func (x *Load) GetIsTurning() bool {
	if x != nil {
		return x.IsTurning
	}
	return false
}

func (x *Load) GetIsNoTime() bool {
	if x != nil {
		return x.IsNoTime
	}
	return false
}

func (x *Load) GetSlots() []*LoadSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type Loads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnCount int32   `protobuf:"varint,1,opt,name=column_count,json=columnCount,proto3" json:"column_count,omitempty"`
	Loads       []*Load `protobuf:"bytes,2,rep,name=loads,proto3" json:"loads,omitempty"`
}

func (x *Loads) Reset() {
	*x = Loads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loads) ProtoMessage() {}

func (x *Loads) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loads.ProtoReflect.Descriptor instead.
func (*Loads) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{12}
}

func (x *Loads) GetColumnCount() int32 {
	if x != nil {
		return x.ColumnCount
	}
	return 0
}

func (x *Loads) GetLoads() []*Load {
	if x != nil {
		return x.Loads
	}
	return nil
}

type ManifestUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *Status     `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Options    *Options    `protobuf:"bytes,2,opt,name=options,proto3,oneof" json:"options,omitempty"`
	Jumprun    *Jumprun    `protobuf:"bytes,3,opt,name=jumprun,proto3,oneof" json:"jumprun,omitempty"`
	WindsAloft *WindsAloft `protobuf:"bytes,4,opt,name=winds_aloft,json=windsAloft,proto3,oneof" json:"winds_aloft,omitempty"`
	Loads      *Loads      `protobuf:"bytes,5,opt,name=loads,proto3,oneof" json:"loads,omitempty"`
}

func (x *ManifestUpdate) Reset() {
	*x = ManifestUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestUpdate) ProtoMessage() {}

func (x *ManifestUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestUpdate.ProtoReflect.Descriptor instead.
func (*ManifestUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{13}
}

func (x *ManifestUpdate) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ManifestUpdate) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ManifestUpdate) GetJumprun() *Jumprun {
	if x != nil {
		return x.Jumprun
	}
	return nil
}

func (x *ManifestUpdate) GetWindsAloft() *WindsAloft {
	if x != nil {
		return x.WindsAloft
	}
	return nil
}

func (x *ManifestUpdate) GetLoads() *Loads {
	if x != nil {
		return x.Loads
	}
	return nil
}

type SignInWithAppleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BundleId          string `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Nonce             string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	IdentityToken     string `protobuf:"bytes,3,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
	AuthorizationCode string `protobuf:"bytes,4,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
	GivenName         string `protobuf:"bytes,5,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName        string `protobuf:"bytes,6,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
}

func (x *SignInWithAppleRequest) Reset() {
	*x = SignInWithAppleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInWithAppleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInWithAppleRequest) ProtoMessage() {}

func (x *SignInWithAppleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInWithAppleRequest.ProtoReflect.Descriptor instead.
func (*SignInWithAppleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{14}
}

func (x *SignInWithAppleRequest) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *SignInWithAppleRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *SignInWithAppleRequest) GetIdentityToken() string {
	if x != nil {
		return x.IdentityToken
	}
	return ""
}

func (x *SignInWithAppleRequest) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

func (x *SignInWithAppleRequest) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *SignInWithAppleRequest) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId         string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionExpiration int64    `protobuf:"varint,2,opt,name=session_expiration,json=sessionExpiration,proto3" json:"session_expiration,omitempty"`
	IsValid           bool     `protobuf:"varint,3,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Roles             []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	ErrorMessage      string   `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SessionDeleted    bool     `protobuf:"varint,6,opt,name=session_deleted,json=sessionDeleted,proto3" json:"session_deleted,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{15}
}

func (x *SignInResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SignInResponse) GetSessionExpiration() int64 {
	if x != nil {
		return x.SessionExpiration
	}
	return 0
}

func (x *SignInResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *SignInResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *SignInResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SignInResponse) GetSessionDeleted() bool {
	if x != nil {
		return x.SessionDeleted
	}
	return false
}

type SignOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SignOutRequest) Reset() {
	*x = SignOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutRequest) ProtoMessage() {}

func (x *SignOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutRequest.ProtoReflect.Descriptor instead.
func (*SignOutRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{16}
}

func (x *SignOutRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SignOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SignOutResponse) Reset() {
	*x = SignOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutResponse) ProtoMessage() {}

func (x *SignOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutResponse.ProtoReflect.Descriptor instead.
func (*SignOutResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{17}
}

func (x *SignOutResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type VerifySessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *VerifySessionRequest) Reset() {
	*x = VerifySessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySessionRequest) ProtoMessage() {}

func (x *VerifySessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySessionRequest.ProtoReflect.Descriptor instead.
func (*VerifySessionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{18}
}

func (x *VerifySessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ToggleFuelRequestedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ToggleFuelRequestedRequest) Reset() {
	*x = ToggleFuelRequestedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleFuelRequestedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFuelRequestedRequest) ProtoMessage() {}

func (x *ToggleFuelRequestedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFuelRequestedRequest.ProtoReflect.Descriptor instead.
func (*ToggleFuelRequestedRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{19}
}

func (x *ToggleFuelRequestedRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ToggleFuelRequestedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ToggleFuelRequestedResponse) Reset() {
	*x = ToggleFuelRequestedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleFuelRequestedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFuelRequestedResponse) ProtoMessage() {}

func (x *ToggleFuelRequestedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFuelRequestedResponse.ProtoReflect.Descriptor instead.
func (*ToggleFuelRequestedResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{20}
}

func (x *ToggleFuelRequestedResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RestartServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *RestartServerRequest) Reset() {
	*x = RestartServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerRequest) ProtoMessage() {}

func (x *RestartServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerRequest.ProtoReflect.Descriptor instead.
func (*RestartServerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{21}
}

func (x *RestartServerRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type RestartServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *RestartServerResponse) Reset() {
	*x = RestartServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_server_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartServerResponse) ProtoMessage() {}

func (x *RestartServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartServerResponse.ProtoReflect.Descriptor instead.
func (*RestartServerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_service_proto_rawDescGZIP(), []int{22}
}

func (x *RestartServerResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_pkg_server_service_proto protoreflect.FileDescriptor

var file_pkg_server_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xce, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x6e,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x22, 0x9a, 0x02, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6e, 0x72, 0x69,
	0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6e, 0x72, 0x69, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x75, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x66, 0x75, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22,
	0x9d, 0x01, 0x0a, 0x0d, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x61, 0x67, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x69,
	0x63, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x43, 0x0a, 0x0b, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78, 0x69, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75,
	0x6d, 0x70, 0x72, 0x75, 0x6e, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x22, 0x8d, 0x01, 0x0a, 0x07, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x12, 0x2f, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x22, 0x9c, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x41, 0x6c, 0x6f, 0x66, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x42, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x41, 0x6c, 0x6f, 0x66, 0x74, 0x12, 0x34, 0x0a,
	0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x41,
	0x6c, 0x6f, 0x66, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x06, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x70, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0b,
	0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x52, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x6d, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2a, 0x0a,
	0x06, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x06, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x22, 0x94, 0x03, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x54, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x05, 0x4c, 0x6f, 0x61, 0x64, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x0e, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x01, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x72, 0x75,
	0x6e, 0x48, 0x02, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x6c, 0x6f, 0x66, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e,
	0x57, 0x69, 0x6e, 0x64, 0x73, 0x41, 0x6c, 0x6f, 0x66, 0x74, 0x48, 0x03, 0x52, 0x0a, 0x77, 0x69,
	0x6e, 0x64, 0x73, 0x41, 0x6c, 0x6f, 0x66, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x05, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x73, 0x48, 0x04, 0x52, 0x05, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x72, 0x75, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x6c, 0x6f, 0x66, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69,
	0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x2f, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x14, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1a, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x42, 0x0a, 0x1b, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x9d, 0x01, 0x0a, 0x0a, 0x4a, 0x75, 0x6d,
	0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x50, 0x45, 0x52,
	0x49, 0x45, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x46, 0x46, 0x5f,
	0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x41,
	0x43, 0x48, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x41, 0x4e, 0x44, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x41, 0x46, 0x46, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54,
	0x4f, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x41, 0x43, 0x48, 0x10, 0x05, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x41, 0x4e, 0x44, 0x45, 0x4d, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55,
	0x43, 0x54, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x47,
	0x52, 0x41, 0x50, 0x48, 0x45, 0x52, 0x10, 0x07, 0x32, 0xe8, 0x03, 0x0a, 0x0f, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30,
	0x01, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x70, 0x70, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x13, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6a, 0x75, 0x6d, 0x70, 0x74, 0x6f, 0x77, 0x6e, 0x2d, 0x73, 0x6b, 0x79, 0x64, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_server_service_proto_rawDescOnce sync.Once
	file_pkg_server_service_proto_rawDescData = file_pkg_server_service_proto_rawDesc
)

func file_pkg_server_service_proto_rawDescGZIP() []byte {
	file_pkg_server_service_proto_rawDescOnce.Do(func() {
		file_pkg_server_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_server_service_proto_rawDescData)
	})
	return file_pkg_server_service_proto_rawDescData
}

var file_pkg_server_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_server_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pkg_server_service_proto_goTypes = []interface{}{
	(JumperType)(0),                     // 0: manifest.JumperType
	(*Status)(nil),                      // 1: manifest.Status
	(*Options)(nil),                     // 2: manifest.Options
	(*JumprunOrigin)(nil),               // 3: manifest.JumprunOrigin
	(*JumprunTurn)(nil),                 // 4: manifest.JumprunTurn
	(*JumprunPath)(nil),                 // 5: manifest.JumprunPath
	(*Jumprun)(nil),                     // 6: manifest.Jumprun
	(*WindsAloftSample)(nil),            // 7: manifest.WindsAloftSample
	(*WindsAloft)(nil),                  // 8: manifest.WindsAloft
	(*Jumper)(nil),                      // 9: manifest.Jumper
	(*JumperGroup)(nil),                 // 10: manifest.JumperGroup
	(*LoadSlot)(nil),                    // 11: manifest.LoadSlot
	(*Load)(nil),                        // 12: manifest.Load
	(*Loads)(nil),                       // 13: manifest.Loads
	(*ManifestUpdate)(nil),              // 14: manifest.ManifestUpdate
	(*SignInWithAppleRequest)(nil),      // 15: manifest.SignInWithAppleRequest
	(*SignInResponse)(nil),              // 16: manifest.SignInResponse
	(*SignOutRequest)(nil),              // 17: manifest.SignOutRequest
	(*SignOutResponse)(nil),             // 18: manifest.SignOutResponse
	(*VerifySessionRequest)(nil),        // 19: manifest.VerifySessionRequest
	(*ToggleFuelRequestedRequest)(nil),  // 20: manifest.ToggleFuelRequestedRequest
	(*ToggleFuelRequestedResponse)(nil), // 21: manifest.ToggleFuelRequestedResponse
	(*RestartServerRequest)(nil),        // 22: manifest.RestartServerRequest
	(*RestartServerResponse)(nil),       // 23: manifest.RestartServerResponse
	(*emptypb.Empty)(nil),               // 24: google.protobuf.Empty
}
var file_pkg_server_service_proto_depIdxs = []int32{
	4,  // 0: manifest.JumprunPath.turns:type_name -> manifest.JumprunTurn
	3,  // 1: manifest.Jumprun.origin:type_name -> manifest.JumprunOrigin
	5,  // 2: manifest.Jumprun.path:type_name -> manifest.JumprunPath
	7,  // 3: manifest.WindsAloft.samples:type_name -> manifest.WindsAloftSample
	0,  // 4: manifest.Jumper.type:type_name -> manifest.JumperType
	9,  // 5: manifest.JumperGroup.leader:type_name -> manifest.Jumper
	9,  // 6: manifest.JumperGroup.members:type_name -> manifest.Jumper
	9,  // 7: manifest.LoadSlot.jumper:type_name -> manifest.Jumper
	10, // 8: manifest.LoadSlot.group:type_name -> manifest.JumperGroup
	11, // 9: manifest.Load.slots:type_name -> manifest.LoadSlot
	12, // 10: manifest.Loads.loads:type_name -> manifest.Load
	1,  // 11: manifest.ManifestUpdate.status:type_name -> manifest.Status
	2,  // 12: manifest.ManifestUpdate.options:type_name -> manifest.Options
	6,  // 13: manifest.ManifestUpdate.jumprun:type_name -> manifest.Jumprun
	8,  // 14: manifest.ManifestUpdate.winds_aloft:type_name -> manifest.WindsAloft
	13, // 15: manifest.ManifestUpdate.loads:type_name -> manifest.Loads
	24, // 16: manifest.ManifestService.StreamUpdates:input_type -> google.protobuf.Empty
	15, // 17: manifest.ManifestService.SignInWithApple:input_type -> manifest.SignInWithAppleRequest
	17, // 18: manifest.ManifestService.SignOut:input_type -> manifest.SignOutRequest
	19, // 19: manifest.ManifestService.VerifySessionID:input_type -> manifest.VerifySessionRequest
	20, // 20: manifest.ManifestService.ToggleFuelRequested:input_type -> manifest.ToggleFuelRequestedRequest
	22, // 21: manifest.ManifestService.RestartServer:input_type -> manifest.RestartServerRequest
	14, // 22: manifest.ManifestService.StreamUpdates:output_type -> manifest.ManifestUpdate
	16, // 23: manifest.ManifestService.SignInWithApple:output_type -> manifest.SignInResponse
	18, // 24: manifest.ManifestService.SignOut:output_type -> manifest.SignOutResponse
	16, // 25: manifest.ManifestService.VerifySessionID:output_type -> manifest.SignInResponse
	21, // 26: manifest.ManifestService.ToggleFuelRequested:output_type -> manifest.ToggleFuelRequestedResponse
	23, // 27: manifest.ManifestService.RestartServer:output_type -> manifest.RestartServerResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pkg_server_service_proto_init() }
func file_pkg_server_service_proto_init() {
	if File_pkg_server_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_server_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumprunOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumprunTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumprunPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jumprun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindsAloftSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindsAloft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jumper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumperGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Load); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInWithAppleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleFuelRequestedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleFuelRequestedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_server_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_server_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_pkg_server_service_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*LoadSlot_Jumper)(nil),
		(*LoadSlot_Group)(nil),
	}
	file_pkg_server_service_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_server_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_server_service_proto_goTypes,
		DependencyIndexes: file_pkg_server_service_proto_depIdxs,
		EnumInfos:         file_pkg_server_service_proto_enumTypes,
		MessageInfos:      file_pkg_server_service_proto_msgTypes,
	}.Build()
	File_pkg_server_service_proto = out.File
	file_pkg_server_service_proto_rawDesc = nil
	file_pkg_server_service_proto_goTypes = nil
	file_pkg_server_service_proto_depIdxs = nil
}
